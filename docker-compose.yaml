version: "3" ## 2.4

networks:
  monitor-net:
    driver: bridge

volumes:
    teamcity_data: {}
    prometheus_data: {}
    minio_data: {}


services:
  teamcity-backup:
    build:
      dockerfile: ./teamcity_backup/Dockerfile
      context: ./
    restart: "no"
    volumes:
      - teamcity_data:${TEAMCITY_DATADIR?}
    env_file:
      - .env
    networks:
      - monitor-net

  teamcity-server:
    image: jetbrains/teamcity-server:2019.1.2-linux
    restart: "no"
    volumes:
      - teamcity_data:${TEAMCITY_DATADIR?}
      # - ./teamcity/logs:/opt/teamcity/logs
    expose:
      - 8111
    ports:
      - 8111:8111
    env_file:
      - .env
    networks:
      - monitor-net

  minio:
    image: minio/minio:RELEASE.2019-08-14T20-37-41Z
    command: ['server', '/data']
    restart: "no"
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    volumes:
      - minio_data:/data
    expose:
      - 9000
    ports:
      - 9000:9000
    env_file:
      - .env
    networks:
      - monitor-net

#  prometheus:
#    image: prom/prometheus:v2.12.0
#    restart: "no"
#    volumes:
#      - ./prometheus/:/etc/prometheus/
#      - prometheus-data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#      - '--storage.tsdb.path=/prometheus'
#      - '--web.console.libraries=/etc/prometheus/console_libraries'
#      - '--web.console.templates=/etc/prometheus/consoles'
#      - '--storage.tsdb.retention=200h'
#      - '--web.enable-lifecycle'
#    ports:
#      - 9090:9090
#
#  grafana:
#    image: grafana/grafana:6.3.3
#    restart: "no"
